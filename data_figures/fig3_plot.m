function fig3_plot
    a = csvread('fig3_SDP_2D_points.csv');
    % Create figure
    figW = 450;
    figH = 400;
    figure1 = figure('Position', [400,400,figW,figH]);
    % Create axes and populate
    % Create axes
    axes1 = axes('Position',...
        [0.07 0.12 0.91 0.85]);
    hold(axes1,'on');
    mesh(0:0.1:1,0:0.1:1,reshape(a(:,4),11,11),'DisplayName','Tangent cutting plane',...
        'FaceLighting','none',...
        'EdgeLighting','flat',...
        'FaceAlpha',0.2,...
        'LineStyle','none',...
        'FaceColor',[1 0 0],...
        'EdgeColor',[0.854901969432831 0.701960802078247 1]);
    surf(0:0.1:1,0:0.1:1,reshape(a(:,5),11,11),'DisplayName','Semidefinite relax. $f(X_\rho^*|\tilde{x}_\rho)$',...
        'FaceColor','texturemap');
    surf(0:0.1:1,0:0.1:1,reshape(a(:,3),11,11),...
        'DisplayName',['Non-convex function  $\tilde{x}_\rho^TQ\tilde{x}_\rho$',newline,'$Q_\rho=[-1,10;0,-1]$, $\rho=\{1,2\}$'],...
        'FaceColor',[1 1 1]);
   
    % Create ylabel
    ylabel({'$\tilde{x}_2$'},'FontSize',18,'Interpreter','latex');

    % Create xlabel
    xlabel({'$\tilde{x}_1$'},'FontSize',18,'Interpreter','latex');

    view(axes1,[-156.4 2.8]);
    box(axes1,'on');
    % Set the remaining axes properties
    set(axes1,'XColor',[0.24705882370472 0.24705882370472 0.24705882370472],...
        'YColor',[0.24705882370472 0.24705882370472 0.24705882370472],'ZColor',...
        [0.24705882370472 0.24705882370472 0.24705882370472]);
    % Create legend
    legend1 = legend(axes1,'show');
    set(legend1,...
        'Position',[0.270939721000714 0.710647792024658 0.699708007527337 0.239441534579679],...
        'Interpreter','latex',...
        'FontSize',14);

    % Create ellipse
    annotation(figure1,'ellipse',...
        [0.506400501500635 0.397192806894737 0.0164140220886344 0.0176358349157425],...
        'LineWidth',12);

    % Create doublearrow
    annotation(figure1,'doublearrow',[0.513509284059105 0.51487414187643],...
        [0.385281386709945 0.25062656641604]);

    % Create ellipse
    annotation(figure1,'ellipse',...
        [0.508547768100414 0.224421102516876 0.0137418478260871 0.013971067140012],...
        'LineWidth',12);

    % Create textbox
    annotation(figure1,'textbox',...
        [0.339394855335778 0.224708976552953 0.199522797952995 0.0627232161229242],...
        'String','$f(\tilde{X}_\rho)$',...
        'LineStyle','none',...
        'Interpreter','latex',...
        'FontSize',16,...
        'FitBoxToText','off');

    % Create textbox
    annotation(figure1,'textbox',...
        [0.03024122356711 0.351302321969353 0.531177829099307 0.118929821130186],...
        'String',{'$\quad \big(\hat{f}^*_2(Q_\rho,\tilde{x}_\rho) \approx\big)$','$\qquad\qquad\quad f(X^*_\rho | \tilde{x}_\rho) $'},...
        'LineStyle','none',...
        'Interpreter','latex',...
        'FontSize',16,...
        'FitBoxToText','off');

    % Create textbox
    annotation(figure1,'textbox',...
        [0.654092519104212 0.32976204411141 0.0859565217391306 0.0349162011173184],...
        'Color',[0 0 1],...
        'String','$\mathcal{I}_X(\rho) \approx \hat{\mathcal{I}}_X(\rho)$',...
        'LineStyle','none',...
        'Interpreter','latex',...
        'HorizontalAlignment','center',...
        'FontSize',16,...
        'FontName','Times New Roman',...
        'FitBoxToText','off',...
        'EdgeColor','none');
    
    % Save generated figure
    set(gcf,'color','w');
    set(gcf, 'renderer','OpenGL');
    saveas(gcf,'fig3.fig');
    print(gcf,'fig3','-dpng','-r300');
    close(gcf);
end

